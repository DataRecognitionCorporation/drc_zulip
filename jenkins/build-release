@Library('DRC_Global_Pipeline_Libraries@master')

def has_failures = false

pipeline {
    agent {
        kubernetes {
            yamlFile 'jenkins/k8s/zulip_ci_jammy.yaml'
        }
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '100', artifactNumToKeepStr: '100'))
        ansiColor('xterm')
    }

    environment {
        GITHUB_ACTIONS = true
        VIRTUAL_ENV = "/srv/zulip-py3-venv"
    }


    parameters {
        string(
            name: 'BUILD_NUMBER',
            defaultValue: '6.1.18',
            description: 'Build number. This must match the release in github.'
        )
    }

    stages {
         stage('Configure') {
            steps {
                container('zulip-ci-jammy') {
                    dir("${WORKSPACE}"){

                        script {
                            sh 'git fetch'
                            sh 'git pull'
                            sh 'git branch -a'
                            sh 'git tag'
                            sh '''
                                git config zulip.zulipRemote
                                git describe --always --tags --match='[0-9]*'
                                ./tools/cache-zulip-git-version
                                head -n1 zulip-git-version
                                OVERRIDE_MERGE_BASE="$version" ./tools/cache-zulip-git-version
                                generated_version=$(head -n1 zulip-git-version)
                                echo $generated_version
                            '''

                            sh """#!/bin/bash
                                set -eu
                                
                                ./tools/provision --build-release-tarball-only
                            """   
                                // source ./tools/ci/activate-venv
                        }
                    }
                }
            }
        }
        stage('Build') {
            steps {
                container('zulip-ci-jammy') {
                    dir("${WORKSPACE}"){
                        script {
                            sh """#!/bin/bash
                                set -eu
                                
                                source ./tools/ci/activate-venv

                                ./tools/build-release-tarball ${params.BUILD_NUMBER} \
                                    && mv /tmp/tmp.*/*-${params.BUILD_NUMBER}.tar.gz ./
                            """
                            //./tools/ci/production-build
                                
                        }
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                container('zulip-ci-jammy') {
                    dir("${WORKSPACE}"){
                        script {
                            uploadToArtifactory([
                                repo: 'downloads',
                                pattern: "./*-${params.BUILD_NUMBER}.tar.gz",
                                git_proj: 'zulip',
                                arti_url: 'https://artifactory.datarecognitioncorp.com/artifactory',
                                isYumRepo: false
                            ])
                        }
                    }
                }
            }
        }
    }
}
